<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Onigiri5233の小家</title>
  
  
  <link href="http://www.onigiri5233.cn/atom.xml" rel="self"/>
  
  <link href="http://www.onigiri5233.cn/"/>
  <updated>2020-10-18T09:14:53.962Z</updated>
  <id>http://www.onigiri5233.cn/</id>
  
  <author>
    <name>Onigiri5233</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP学习笔记</title>
    <link href="http://www.onigiri5233.cn/2020/10/18/php%20study/"/>
    <id>http://www.onigiri5233.cn/2020/10/18/php%20study/</id>
    <published>2020-10-18T00:00:00.000Z</published>
    <updated>2020-10-18T09:14:53.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP学习那些事"><a href="#PHP学习那些事" class="headerlink" title="PHP学习那些事"></a>PHP学习那些事</h1><ul><li><h3 id="标记风格"><a href="#标记风格" class="headerlink" title="标记风格"></a>标记风格</h3><ul><li>PHP有四种标记风格，标准标记风格如下：</li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h3><ul><li><p>变量名前要以$开头</p></li><li><p>变量名称必须为字母开头，且构成变量名的字符为A-z、0-9和_(下划线)</p></li><li><p>PHP并不像C语言一样需要声明变量类型才能使用</p></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $a=<span class="number">1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h5><ul><li>如果需要在一个函数中使用函数外的变量，那么就需要使用global来声明一个全局变量</li></ul></li><li><p>关键字为global</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$x=<span class="number">5</span>;</span><br><span class="line">$y=<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"></span>) // 声明函数<span class="title">myTest</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">global</span> $x,$y; <span class="comment">// 声明函数体myTest内$x $y为全局变量</span></span><br><span class="line">$y=$x+$y;</span><br><span class="line">&#125;</span><br><span class="line">myTest();</span><br><span class="line"><span class="keyword">echo</span> $y; <span class="comment">// 加法运算 输出为15</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="作用域-函数"><a href="#作用域-函数" class="headerlink" title="作用域/函数"></a>作用域/函数</h5><p><strong>变量的作用域即变量的使用范围，每个变量都有一个针对他的作用域，是指可以在而其中访问变量（从而访问他的值）的一个领域。</strong></p><ul><li><p>Static 作用域</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123; <span class="comment">//代码块开始</span></span><br><span class="line"><span class="built_in">static</span> $x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> $x;</span><br><span class="line">$x++;</span><br><span class="line">&#125; <span class="comment">//代码块结束</span></span><br><span class="line">f();<span class="comment">//1</span></span><br><span class="line">f();<span class="comment">//2</span></span><br></pre></td></tr></table></figure></li><li><p>参数作用域</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params">$x</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $x;</span><br><span class="line">&#125;</span><br><span class="line">myTest(<span class="number">5</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h5><ul><li><p>常量定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(gh, <span class="string">&quot;广航&quot;</span>)；  <span class="comment">//define(常量名，常量值)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><p>1)常量名是字符串<br>2)常量值必须是标量<br>3)常量名一般大写，和变量做区别<br>4)常量名和变量名，命名规则相同</p></li></ul></li><li><h5 id="系统常量-魔术常量"><a href="#系统常量-魔术常量" class="headerlink" title="系统常量(魔术常量)"></a>系统常量(魔术常量)</h5><table><thead><tr><th align="left">ID</th><th>常量</th><th>注释</th></tr></thead><tbody><tr><td align="left">1</td><td><strong><strong><strong><strong>FILE</strong></strong></strong></strong></td><td>当前文件路径</td></tr><tr><td align="left">2</td><td><strong><strong><strong><strong>DIR</strong></strong></strong></strong></td><td>当前文件目录</td></tr><tr><td align="left">3</td><td><strong><strong><strong><strong>LINE</strong></strong></strong></strong></td><td>在文件文件的那一行</td></tr><tr><td align="left">4</td><td><strong><strong><strong><strong>FUNCTION</strong></strong></strong></strong></td><td>在当前文件的那个函数中 返回 函数名</td></tr><tr><td align="left">5</td><td><strong><strong><strong><strong>CLASS</strong></strong></strong></strong></td><td>在当前文件中的那个类中 返回 类名</td></tr><tr><td align="left">6</td><td><strong><strong><strong><strong>METHOD</strong></strong></strong></strong></td><td>在当前文件的类中的那个方法中 返回 类名::方法名</td></tr></tbody></table></li><li><h3 id="几种基本输出"><a href="#几种基本输出" class="headerlink" title="几种基本输出"></a>几种基本输出</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;hello world!&quot;</span>;<span class="comment">//只能打印字符串</span></span><br><span class="line">print_r(<span class="string">&quot;hello world!&quot;</span>);<span class="comment">//能够打印数组和字符串</span></span><br><span class="line">var_dump(<span class="string">&quot;hello world!&quot;</span>);<span class="comment">//能够打印数组和字符串同时输出打印内容的数据类型</span></span><br><span class="line">var_export(<span class="string">&quot;hello world!&quot;</span>,<span class="literal">true</span>);<span class="comment">/*能够将字符串转换为php代码，第二个参数设置为true能够返</span></span><br><span class="line"><span class="comment">回值*/</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hello world!&quot;</span>);<span class="comment">//结束程序并打印内容</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3></li><li><h5 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(exp)&#123;<span class="comment">//判断条件</span></span><br><span class="line"><span class="comment">//条件成立时候执行的代码块</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><h5 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">10</span></span><br><span class="line"><span class="keyword">switch</span> ($a)</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">case</span> $a = <span class="number">5</span>: <span class="comment">//时执行的代码 ;</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;等于5&quot;</span></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">//阻止代码跳掉下一个case中执行</span></span><br><span class="line">     <span class="keyword">case</span> $a &lt; <span class="number">5</span>:<span class="comment">//时执行的代码 ;</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;小于5&quot;</span></span><br><span class="line">        <span class="keyword">break</span>; </span><br><span class="line">     <span class="keyword">case</span> $a &gt; <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;大于5&quot;</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">default</span>: <span class="comment">//表达式的值符合上述式子时执行的代码;</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;ERROR!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><h3 id="PHP中的数组-遍历数组"><a href="#PHP中的数组-遍历数组" class="headerlink" title="PHP中的数组/遍历数组"></a>PHP中的数组/遍历数组</h3></li><li><h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><ul><li><p>数组是特殊的变量，它可以同时保存一个以上的值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$var1 = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">$var2 = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">$var3 = <span class="string">&quot;3&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>在 PHP 中， array() 函数用于创建数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>();</span><br></pre></td></tr></table></figure></li><li><p>PHP中有三种数组类型：</p><ul><li>索引数组 - 带有数字索引的数组</li><li>关联数组 - 带有指定键的数组</li><li>多维数组 - 包含一个或多个数组的数组</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">//关联数组</span></span><br><span class="line">$age=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($age <span class="keyword">as</span> $x=&gt;$x_value) <span class="comment">//(原数组 as )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Key=&quot;</span> . $x . <span class="string">&quot;, Value=&quot;</span> . $x_value;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>自动分配索引：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$vals=<span class="keyword">array</span>(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>);<span class="comment">//索引从0开始</span></span><br></pre></td></tr></table></figure></li><li><p>手动分配索引：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$vals[<span class="number">0</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">$vals[<span class="number">1</span>]=<span class="string">&quot;2&quot;</span>;</span><br><span class="line">$vals[<span class="number">2</span>]=<span class="string">&quot;3&quot;</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><h3 id="登陆保持"><a href="#登陆保持" class="headerlink" title="登陆保持"></a>登陆保持</h3></li><li><h5 id="Cookies-保存在本地具备一定生命周期的临时文件"><a href="#Cookies-保存在本地具备一定生命周期的临时文件" class="headerlink" title="Cookies,保存在本地具备一定生命周期的临时文件"></a>Cookies,保存在本地具备一定生命周期的临时文件</h5></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(name, value, expire, path, domain);</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>必需。规定 cookie 的名称。</td></tr><tr><td>value</td><td>必需。规定 cookie 的值。</td></tr><tr><td>expire</td><td>可选。规定 cookie 的过期时间。 time()+3600 将设置 cookie 的过期时间为 30天。如果这个参数没有设置，那么 cookie 将在 session 结束后（即浏览器关闭时）自动失效。</td></tr><tr><td>path</td><td>可选。规定 cookie 的服务器路径。如果路径设置为 “/“，那么 cookie 将在整个域名内有效.如果路径设置为 “/test/“，那么 cookie 将在 test 目录下及其所有子目录下有效。默认的路径值是 cookie 所处的当前目录。</td></tr><tr><td>domain</td><td>可选。规定 cookie 的域名。为了让 cookie 在 example.com 的所有子域名中有效，您需要把 cookie 的域名设置为 “.example.com”。当您把 cookie 的域名设置为 <a href="http://www.example.com/">www.example.com</a> 时，cookie 仅在 www 子域名中有效。</td></tr><tr><td>secure</td><td>可选。规定是否需要在安全的 HTTPS 连接来传输 cookie。如果 cookie 需要在安全的HTTPS 连接下传输，则设置为 TRUE。默认是 FALSE。</td></tr></tbody></table><ul><li><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">setcookie(<span class="string">&#x27;username&#x27;</span>,<span class="string">&quot;admin&quot;</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="keyword">echo</span> $_COOKIE[<span class="string">&#x27;username&#x27;</span>];</span><br></pre></td></tr></table></figure></li></ul><ul><li><h5 id="Session，基于cookie，但是数据存储在服务器，本地利用cookies存储一个session。"><a href="#Session，基于cookie，但是数据存储在服务器，本地利用cookies存储一个session。" class="headerlink" title="Session，基于cookie，但是数据存储在服务器，本地利用cookies存储一个session。"></a>Session，基于cookie，但是数据存储在服务器，本地利用cookies存储一个session。</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">&#x27;admin&#x27;</span>]=<span class="string">&#x27;sb&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $_SESSION[<span class="string">&#x27;admin&#x27;</span>];</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PHP学习那些事&quot;&gt;&lt;a href=&quot;#PHP学习那些事&quot; class=&quot;headerlink&quot; title=&quot;PHP学习那些事&quot;&gt;&lt;/a&gt;PHP学习那些事&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;标记风格&quot;&gt;&lt;a href=&quot;#标记风格&quot; class=&quot;hea</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>欢迎来到我的主页</title>
    <link href="http://www.onigiri5233.cn/2020/09/27/hello-world/"/>
    <id>http://www.onigiri5233.cn/2020/09/27/hello-world/</id>
    <published>2020-09-26T20:53:10.000Z</published>
    <updated>2020-09-26T12:54:48.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="梦开始的地方"><a href="#梦开始的地方" class="headerlink" title="梦开始的地方"></a>梦开始的地方</h2><p>如果你看到了这条消息，那么欢迎你来到我的主页，我可能不定时的会在这里分享一些技术性知识和资源（当然身为一名码农小白还需要慢慢学习）。期待我未来的学习和发展吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;梦开始的地方&quot;&gt;&lt;a href=&quot;#梦开始的地方&quot; class=&quot;headerlink&quot; title=&quot;梦开始的地方&quot;&gt;&lt;/a&gt;梦开始的地方&lt;/h2&gt;&lt;p&gt;如果你看到了这条消息，那么欢迎你来到我的主页，我可能不定时的会在这里分享一些技术性知识和资源（当然身为一名码</summary>
      
    
    
    
    
  </entry>
  
</feed>
